{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport { SET_LOADING } from \"../actions/employee/employeeTypes\";\nimport { LOGIN, LOGOUT, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL } from \"../actions/auth/authTypes\";\n\nfunction* userLogin({\n  action,\n  payload\n}) {\n  // yield put({ type: SET_LOADING });\n  // try {\n  //    const user = yield fetch(`https://`).then((response) => response.json());\n  //    yield put({ type: LOGIN_SUCCESS, payload: user });\n  // } catch (e) {\n  //    yield put({ type: LOGIN_FAIL, payload: e.message });\n  // }\n  // yield put({ type: SET_LOADING });\n  yield put({\n    type: LOGIN_SUCCESS,\n    payload: payload\n  });\n}\n\nfunction* userLogout({\n  action,\n  payload\n}) {\n  // yield put({ type: SET_LOADING });\n  // try {\n  //    const user = yield fetch(`https://`).then((response) => response.json());\n  //    yield put({ type: LOGOUT_SUCCESS, payload: user });\n  // } catch (e) {\n  //    yield put({ type: LOGOUT_FAIL, payload: e.message });\n  // }\n  // yield put({ type: SET_LOADING });\n  localStorage.removeItem(\"user\");\n  yield put({\n    type: LOGOUT_SUCCESS\n  });\n}\n\nexport function* authActionWatcher() {\n  yield takeLatest(LOGIN, userLogin);\n  yield takeLatest(LOGOUT, userLogout);\n}","map":{"version":3,"sources":["/home/amol/Desktop/Identity and Access Management Portal (copy)/src/sagas/auth.sagas.js"],"names":["put","takeLatest","SET_LOADING","LOGIN","LOGOUT","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","userLogin","action","payload","type","userLogout","localStorage","removeItem","authActionWatcher"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,cALF,EAMEC,WANF,QAOO,2BAPP;;AASA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAApB,EAAyC;AACvC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,QAAMX,GAAG,CAAC;AAAEY,IAAAA,IAAI,EAAEP,aAAR;AAAuBM,IAAAA,OAAO,EAAEA;AAAhC,GAAD,CAAT;AACD;;AACD,UAAUE,UAAV,CAAqB;AAAEH,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAArB,EAA0C;AACxC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACAG,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACA,QAAMf,GAAG,CAAC;AAAEY,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAT;AACD;;AAED,OAAO,UAAUS,iBAAV,GAA8B;AACnC,QAAMf,UAAU,CAACE,KAAD,EAAQM,SAAR,CAAhB;AACA,QAAMR,UAAU,CAACG,MAAD,EAASS,UAAT,CAAhB;AACD","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport { SET_LOADING } from \"../actions/employee/employeeTypes\";\nimport {\n  LOGIN,\n  LOGOUT,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAIL,\n} from \"../actions/auth/authTypes\";\n\nfunction* userLogin({ action, payload }) {\n  // yield put({ type: SET_LOADING });\n  // try {\n  //    const user = yield fetch(`https://`).then((response) => response.json());\n\n  //    yield put({ type: LOGIN_SUCCESS, payload: user });\n  // } catch (e) {\n  //    yield put({ type: LOGIN_FAIL, payload: e.message });\n  // }\n  // yield put({ type: SET_LOADING });\n\n  yield put({ type: LOGIN_SUCCESS, payload: payload });\n}\nfunction* userLogout({ action, payload }) {\n  // yield put({ type: SET_LOADING });\n  // try {\n  //    const user = yield fetch(`https://`).then((response) => response.json());\n\n  //    yield put({ type: LOGOUT_SUCCESS, payload: user });\n  // } catch (e) {\n  //    yield put({ type: LOGOUT_FAIL, payload: e.message });\n  // }\n  // yield put({ type: SET_LOADING });\n  localStorage.removeItem(\"user\");\n  yield put({ type: LOGOUT_SUCCESS });\n}\n\nexport function* authActionWatcher() {\n  yield takeLatest(LOGIN, userLogin);\n  yield takeLatest(LOGOUT, userLogout);\n}\n"]},"metadata":{},"sourceType":"module"}